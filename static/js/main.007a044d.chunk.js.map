{"version":3,"sources":["res/cv.pdf","MessageBubble.js","Chat.js","About.js","Chess.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BubbleBot","styled","section","BubbleUser","MessageBubble","props","state","typingTime","Math","min","message","length","typing","getTyping","setTimeout","setState","this","timestamp","sender","Date","now","Spinner","as","animation","size","role","aria-hidden","Component","InputCss","input","ButtonCss","button","Chat","input_text","asteptNume","username","terminat","mesaje","refchat","React","createRef","flow","addNewMessage","items","floor","random","scrolltoBottom","console","log","current","scrollIntoView","behaviour","style","display","map","mesaj","i","ref","undefined","renderMesaje","type","id","value","onChange","val","target","onKeyPress","event","key","onClick","variant","About","card_title","card_text","Card","width","Img","src","Body","Title","Text","Button","Chess","onMovePieces","bind","allowMoves","puzzleuri","piese","solutie","fromSquare","toSquare","puzzle_curent","lightSquareColors","darkSquareColors","fromSquares","toSquares","timp_trecut","allowMovess","endGame","myvar","setInterval","clearInterval","piece","variabila","pieces","lightSquareColor","darkSquareColor","onMovePiece","pdf","require","App","current_page","page","Nav","Item","margin","Link","bold","padding","color","window","open","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.007a044d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv.af4daf87.pdf\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nconst BubbleBot = styled.section`\r\nbackground: #ffa8a8;\r\nborder-radius: .4em;\r\nborder: 20px solid transparent;\r\nmargin: 20px;\r\n\r\n\r\nmargin-left: 5;\r\n\r\nalign-self: flex-start;\r\nleft: 2;\r\nmargin: 2;\r\ndisplay: table;\r\n`;\r\n\r\n\r\nconst BubbleUser = styled.section`\r\n\r\nmargin-right: 5;\r\nalign-self: flex-end;\r\nflex-direction: row;\r\nright: 5;\r\nmargin: 2;\r\n\r\nfloat: right;\r\nposition: relative;\r\ntext-align:right;\r\nbackground: #ffff9f;\r\nborder-radius: .4em;\r\nborder: 20px solid transparent;\r\nmargin: 20px;\r\ndisplay: table;\r\nmargin-right: 5;\r\n`;\r\n\r\nclass MessageBubble extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      typingTime: Math.min(80 * this.props.message.length, 1500), // message.length = cate caractere are\r\n    };\r\n\r\n\r\n    this.state.typing = this.getTyping(); // this.state.typing folosea getTyping si cand\r\n    // intra in state folosea getTyping care folosea ceva din state care era\r\n    // inca undifined\r\n    setTimeout(() => { this.setState({ typing: this.getTyping() }); }, this.state.typingTime); // peste 5 sec schimbam typeing ul ca sa modifice state ul pt radare\r\n  }\r\n\r\n  getTyping() {\r\n    const { timestamp, sender } = this.props;\r\n    const typing = (sender === 'bot' && timestamp > Date.now() - this.state.typingTime);\r\n    return typing;\r\n  }\r\n\r\n  render() {\r\n    const { message, timestamp, sender } = this.props;\r\n\r\n\r\n    if (this.state.typing) {\r\n      return (\r\n        <BubbleBot>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"border\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </BubbleBot>\r\n      );\r\n    }\r\n    if (sender === 'bot') {\r\n      return (\r\n\r\n        <BubbleBot>\r\n          {message}\r\n        </BubbleBot>\r\n\r\n      );\r\n    }\r\n    return (\r\n      <BubbleUser>\r\n        {message}\r\n      </BubbleUser>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageBubble;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport MessageBubble from './MessageBubble';\r\n\r\n\r\nconst InputCss = styled.input`\r\nposition : fixed;\r\nbottom: 5%;\r\nright: 45%;\r\nborder-radius: 3px;\r\n\r\npadding: 14px;\r\ncolor : palevioletred;\r\nbackground: transparent;\r\nborder: 2px solid palevioletred;\r\nfont-size: 14px;\r\ntransition: 0.5s all ease-out;\r\n  &:hover {\r\n    background-color: palevioletred;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ButtonCss = styled.button`\r\nposition : fixed;\r\nbottom: 5%;\r\nright: 34%;\r\ncursor: pointer;\r\nbackground: transparent;\r\nfont-size: 20px;\r\nborder-radius: 3px;\r\ncolor: palevioletred;\r\nborder: 2px solid palevioletred;\r\nmargin: 0 1em;\r\npadding: 0.40em 1.5em;\r\ntransition: 0.5s all ease-out;\r\n  &:hover {\r\n    background-color: palevioletred;\r\n    color: white;\r\n  }\r\n`;\r\nclass Chat extends React.Component { // eslint-disable-line\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      input_text: '',\r\n      asteptNume: false,\r\n      username: '',\r\n      terminat: false,\r\n      mesaje: [],\r\n    };\r\n    this.refchat = React.createRef();\r\n    this.flow();\r\n  }\r\n\r\n\r\n  getTyping() {\r\n    const { timestamp, sender } = this.props;\r\n    const typing = (sender === 'bot' && timestamp > Date.now() - this.state.typingTime);\r\n    return typing;\r\n  }\r\n\r\n  flow() {\r\n    this.state.typing = this.getTyping();\r\n    setTimeout(() => { this.addNewMessage('Salut', 'bot'); }, 500);\r\n\r\n    setTimeout(() => { this.addNewMessage('Eu sunt Anca', 'bot'); }, 2000);\r\n\r\n    setTimeout(() => { this.addNewMessage('Si caut internship', 'bot'); }, 4000);\r\n\r\n    setTimeout(() => {\r\n      this.addNewMessage('Cum te numesti?', 'bot');\r\n      this.setState({\r\n        asteptNume: true,\r\n      });\r\n    }, 6000);\r\n  }\r\n\r\n  addNewMessage(message, sender) {\r\n    this.setState({\r\n      mesaje: [...this.state.mesaje, { message, timestamp: Date.now(), sender }],\r\n    });\r\n\r\n    if (sender === 'user' && this.state.asteptNume) {\r\n      this.setState({\r\n        asteptNume: false,\r\n        username: message,\r\n        terminat: true,\r\n      });\r\n      setTimeout(() => { this.addNewMessage(`${this.state.username}, CV-ul meu il gasesti pe tab-ul de sus.`, 'bot'); }, 600);\r\n    }\r\n\r\n    if (sender === 'user' && this.state.terminat) {\r\n      const items = ['Hei, gata, asta a fost', 'Hei, s-a terminat',\r\n        'Gata DEMO-ul', 'Doar atat am fost programat sa fac...', 'lasa-ma in pace', 'termina, te rog'];\r\n\r\n      setTimeout(() => { this.addNewMessage(items[Math.floor(Math.random() * items.length)], 'bot'); }, 500);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrolltoBottom();\r\n  }\r\n\r\n  scrolltoBottom() {\r\n    if (this.refchat && this.state.mesaje.length > 0) {\r\n      console.log('anca e tot smek');\r\n      this.refchat.current.scrollIntoView({ behaviour: 'smooth' });\r\n    }\r\n  }\r\n\r\n  renderMesaje() {\r\n    return (\r\n      <ul style={{ display: 'flex', 'flex-direction': 'column' }}>\r\n        {this.state.mesaje.map((mesaj, i) => (\r\n          <div ref={i === this.state.mesaje.length - 1 ? this.refchat : undefined}>\r\n            <MessageBubble message={mesaj.message} sender={mesaj.sender} timestamp={mesaj.timestamp} />\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    ); // pt fiecare mesaj si poz lui din vector face functia respectiva\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderMesaje()}\r\n        <InputCss\r\n          type=\"text\"\r\n          id=\"id_input\"\r\n          value={this.state.input_text}\r\n          onChange={(val) => {\r\n            this.setState({ input_text: val.target.value });\r\n          }}\r\n          onKeyPress={(event) => {\r\n            if (event.key === 'Enter') {\r\n              this.addNewMessage(this.state.input_text, 'user');\r\n              this.setState({ input_text: '' });\r\n            }\r\n          }}\r\n        />\r\n\r\n        <ButtonCss\r\n          onClick={() => {\r\n            this.addNewMessage(this.state.input_text, 'user');\r\n            this.setState({ input_text: '' });\r\n          }}\r\n          // variant={this.state.button_change}\r\n          variant=\"primary\"\r\n        >\r\n          Trimite!\r\n\r\n        </ButtonCss>\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nclass About extends React.Component { // eslint-disable-line\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      card_title: 'title ',\r\n      card_text: 'text ',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {this.state.card_title}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              {this.state.card_text}\r\n\r\n            </Card.Text>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({ card_title: 'am schimbat' });\r\n                this.setState({ card_text: 'am schimbat' });\r\n              }}\r\n              variant=\"primary\"\r\n            >\r\n\r\n              Go somewhere\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React from 'react';\r\nimport ChessLib from 'react-chess';\r\n\r\nclass Chess extends React.Component { // eslint-disable-line\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMovePieces = this.onMovePieces.bind(this);\r\n    this.state = {\r\n      allowMoves: 'true',\r\n      puzzleuri: [{\r\n        piese: ['r@a8', 'n@b8', 'r@d8', 'k@g8',\r\n          'p@b7', 'q@c7', 'p@f8', 'p@h7',\r\n          'p@a6', 'p@d6', 'b@f6', 'p@g6',\r\n          'B@h6', 'P@d5', 'P@a4', 'Q@e4',\r\n          'P@c3', 'B@d3', 'P@f2', 'P@g2',\r\n          'P@h2', 'R@c1', 'R@e1', 'K@g1'],\r\n        solutie: { fromSquare: 'e4', toSquare: 'e8' },\r\n      },\r\n      {\r\n        piese: ['r@b8', 'r@h8', 'k@e8',\r\n          'b@e7', 'p@f7', 'p@g7', 'p@h7',\r\n          'p@e6', 'q@g6', 'p@b5', 'n@f4',\r\n          'N@e4', 'P@c3', 'P@b2', 'Q@e2',\r\n          'P@h2', 'P@f2', 'P@g2', 'R@a7',\r\n          'R@d1', 'K@g1'],\r\n        solutie: { fromSquare: 'e2', toSquare: 'b5' },\r\n      },\r\n      {\r\n        piese: ['r@a8', 'n@b8', 'k@g8',\r\n          'p@b7', 'q@c7', 'p@f8', 'p@h7',\r\n          'p@a6', 'p@d6', 'b@f6', 'p@g6',\r\n          'B@h6', 'P@d5', 'P@a4', 'Q@e2',\r\n          'P@c3', 'B@d3', 'P@f2', 'P@g2',\r\n          'P@h2', 'R@c1', 'R@e1', 'K@g1'],\r\n        solutie: { fromSquare: 'e1', toSquare: 'e2' },\r\n      },\r\n      {\r\n        piese: [],\r\n        solutie: { fromSquare: '', toSquare: '' },\r\n      },\r\n      ],\r\n      puzzle_curent: 0,\r\n      lightSquareColors: 'palevioletred',\r\n      darkSquareColors: '#b51866',\r\n      fromSquares: ' ',\r\n      toSquares: ' ',\r\n      timp_trecut: 0,\r\n      mesaj: ' ',\r\n      allowMovess: true,\r\n      endGame: false,\r\n\r\n    };\r\n    const myvar = setInterval(() => {\r\n      this.setState(\r\n        {\r\n          timp_trecut: this.state.timp_trecut + 1,\r\n        },\r\n\r\n      );\r\n      if (this.state.timp_trecut === 20) {\r\n        clearInterval(myvar);\r\n        this.setState({\r\n          mesaj: ' timpul s-a scurs ! ',\r\n          allowMovess: false,\r\n          endGame: true,\r\n        });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onMovePieces(piece, fromSquare, toSquare) {\r\n    console.log(piece, fromSquare, toSquare);\r\n    this.setState({\r\n      fromSquares: fromSquare,\r\n      toSquares: toSquare,\r\n      variabila: `${fromSquare} s-a mutat la ${toSquare}`,\r\n\r\n    });\r\n    if (fromSquare === this.state.puzzleuri[this.state.puzzle_curent].solutie.fromSquare\r\n      && toSquare === this.state.puzzleuri[this.state.puzzle_curent].solutie.toSquare\r\n      || this.state.endGame === true) {\r\n      // console.log('schimb');\r\n      this.setState({\r\n        mesaj: 'Felicitari ati facut cea mai optima mutare',\r\n        puzzle_curent: this.state.puzzle_curent + 1,\r\n        timp_trecut: 0,\r\n      });\r\n      if (this.state.puzzle_curent === 3) {\r\n        this.setState({\r\n          mesaj: 'Felicitari, ati castigat!',\r\n          endGame: true,\r\n          allowMovess: false,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        mesaj: 'Mai incearca',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        'flex-directions': 'row',\r\n        width: 800,\r\n        'font-size': '30px',\r\n        'justify-content': 'space-around',\r\n      }}\r\n      >\r\n        <div1>\r\n          {this.state.timp_trecut}\r\n          {/* {this.state.variabila} */}\r\n          {this.state.mesaj}\r\n          {/* {this.state.puzzle_curent} */}\r\n\r\n        </div1>\r\n\r\n        <ChessLib\r\n          pieces={this.state.puzzleuri[this.state.puzzle_curent].piese}\r\n          lightSquareColor={this.state.lightSquareColors}\r\n          darkSquareColor={this.state.darkSquareColors}\r\n          onMovePiece={this.onMovePieces}\r\n          allowMoves={this.state.allowMovess}\r\n        />\r\n\r\n        <div3>\r\n\r\n          blabalblala\r\n        </div3>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Chess;\r\n","import React from 'react';\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\n\r\nimport Chat from './Chat';\r\nimport About from './About';\r\nimport Chess from './Chess';\r\n\r\nconst pdf = require('./res/cv.pdf');\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // button_change: 'primary'\r\n      current_page: 'chat',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let page = null;\r\n    if (this.state.current_page === 'chat') {\r\n      page = (<Chat />);\r\n    } else if (this.state.current_page === 'chess') {\r\n      page = (<Chess />);\r\n    } else {\r\n      page = (<About />);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Nav variant=\"tabs\">\r\n          <Nav.Item\r\n            style={{ margin: 'auto' }}\r\n            onClick={() => {\r\n              this.setState({ current_page: 'chat' });\r\n            }}\r\n          >\r\n            <Nav.Link style={{\r\n              bold: 'true', 'font-size': 34, padding: '50px', color: 'palevioletred',\r\n            }}\r\n            >\r\n              Chat\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item\r\n            style={{ margin: 'auto' }}\r\n            onClick={() => window.open(pdf, '_blank')}\r\n          >\r\n            <Nav.Link style={{\r\n              bold: 'true', 'font-size': 34, padding: '50px', color: 'palevioletred',\r\n            }}\r\n            >\r\n              CV\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item\r\n            style={{ margin: 'auto' }}\r\n            onClick={() => {\r\n              this.setState({ current_page: 'chess' });\r\n            }}\r\n          >\r\n            <Nav.Link style={{\r\n              bold: 'true', 'font-size': 34, padding: '50px', color: 'palevioletred',\r\n            }}\r\n            >\r\n              Chess\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}