{"version":3,"sources":["res/cv.pdf","MessageBubble.js","Chat.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BubbleBot","styled","section","BubbleUser","MessageBubble","props","state","typingTime","Math","min","message","length","typing","getTyping","setTimeout","setState","this","timestamp","sender","Date","now","Spinner","as","animation","size","role","aria-hidden","Component","InputCss","input","ButtonCss","button","Chat","input_text","asteptNume","username","terminat","mesaje","refchat","React","createRef","flow","addNewMessage","items","floor","random","scrolltoBottom","console","log","current","scrollIntoView","behaviour","style","display","map","mesaj","i","ref","undefined","renderMesaje","type","id","value","onChange","val","target","onKeyPress","event","key","onClick","variant","About","card_title","card_text","Card","width","Img","src","Body","Title","Text","Button","pdf","require","App","current_page","page","Nav","Item","margin","Link","bold","padding","color","window","open","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d90f17cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv.af4daf87.pdf\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nconst BubbleBot = styled.section`\r\nbackground: #ffa8a8;\r\nborder-radius: .4em;\r\nborder: 20px solid transparent;\r\nmargin: 20px;\r\n\r\n\r\nmargin-left: 5;\r\n\r\nalign-self: flex-start;\r\nleft: 2;\r\nmargin: 2;\r\ndisplay: table;\r\n`;\r\n\r\n\r\nconst BubbleUser = styled.section`\r\n\r\nmargin-right: 5;\r\nalign-self: flex-end;\r\nflex-direction: row;\r\nright: 5;\r\nmargin: 2;\r\n\r\nfloat: right;\r\nposition: relative;\r\ntext-align:right;\r\nbackground: #ffff9f;\r\nborder-radius: .4em;\r\nborder: 20px solid transparent;\r\nmargin: 20px;\r\ndisplay: table;\r\nmargin-right: 5;\r\n`;\r\n\r\nclass MessageBubble extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      typingTime: Math.min(80 * this.props.message.length, 1500), // message.length = cate caractere are\r\n    };\r\n\r\n\r\n    this.state.typing = this.getTyping(); // this.state.typing folosea getTyping si cand\r\n    // intra in state folosea getTyping care folosea ceva din state care era\r\n    // inca undifined\r\n    setTimeout(() => { this.setState({ typing: this.getTyping() }); }, this.state.typingTime); // peste 5 sec schimbam typeing ul ca sa modifice state ul pt radare\r\n  }\r\n\r\n  getTyping() {\r\n    const { timestamp, sender } = this.props;\r\n    const typing = (sender === 'bot' && timestamp > Date.now() - this.state.typingTime);\r\n    return typing;\r\n  }\r\n\r\n  render() {\r\n    const { message, timestamp, sender } = this.props;\r\n\r\n\r\n    if (this.state.typing) {\r\n      return (\r\n        <BubbleBot>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"border\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </BubbleBot>\r\n      );\r\n    }\r\n    if (sender === 'bot') {\r\n      return (\r\n\r\n        <BubbleBot>\r\n          {message}\r\n        </BubbleBot>\r\n\r\n      );\r\n    }\r\n    return (\r\n      <BubbleUser>\r\n        {message}\r\n      </BubbleUser>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageBubble;\r\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport MessageBubble from './MessageBubble';\n\n\nconst InputCss = styled.input`\nposition : fixed;\nbottom: 5%;\nright: 45%;\nborder-radius: 3px;\n\npadding: 14px;\ncolor : palevioletred;\nbackground: transparent;\nborder: 2px solid palevioletred;\nfont-size: 14px;\ntransition: 0.5s all ease-out;\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst ButtonCss = styled.button`\nposition : fixed;\nbottom: 5%;\nright: 34%;\ncursor: pointer;\nbackground: transparent;\nfont-size: 20px;\nborder-radius: 3px;\ncolor: palevioletred;\nborder: 2px solid palevioletred;\nmargin: 0 1em;\npadding: 0.40em 1.5em;\ntransition: 0.5s all ease-out;\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\nclass Chat extends React.Component { // eslint-disable-line\n  constructor (props) {\n    super(props);\n    this.state = {\n      input_text: '',\n      asteptNume: false,\n      username: '',\n      terminat: false,\n      mesaje: [],\n    };\n    this.refchat = React.createRef();\n    this.flow();\n  }\n\n\n  getTyping() {\n    const { timestamp, sender } = this.props;\n    const typing = (sender === 'bot' && timestamp > Date.now() - this.state.typingTime);\n    return typing;\n  }\n\n  flow() {\n    this.state.typing = this.getTyping();\n    setTimeout(() => { this.addNewMessage('Salut', 'bot'); }, 500);\n\n    setTimeout(() => { this.addNewMessage('Eu sunt Anca', 'bot'); }, 2000);\n\n    setTimeout(() => { this.addNewMessage('Si caut internship', 'bot'); }, 4000);\n\n    setTimeout(() => {\n      this.addNewMessage('Cum te numesti?', 'bot');\n      this.setState({\n        asteptNume: true,\n      });\n    }, 6000);\n  }\n\n  addNewMessage(message, sender) {\n    this.setState({\n      mesaje: [...this.state.mesaje, { message, timestamp: Date.now(), sender }],\n    });\n\n    if (sender === 'user' && this.state.asteptNume) {\n      this.setState({\n        asteptNume: false,\n        username: message,\n        terminat: true,\n      });\n      setTimeout(() => { this.addNewMessage(`${this.state.username}, CV-ul meu il gasesti pe tab-ul de sus.`, 'bot'); }, 600);\n    }\n\n    if (sender === 'user' && this.state.terminat) {\n      const items = ['Hei, gata, asta a fost', 'Hei, s-a terminat',\n        'Gata DEMO-ul', 'Doar atat am fost programat sa fac...', 'lasa-ma in pace'];\n\n      setTimeout(() => { this.addNewMessage(items[Math.floor(Math.random() * items.length)], 'bot'); }, 500);\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrolltoBottom();\n  }\n\n  scrolltoBottom() {\n    if (this.refchat && this.state.mesaje.length > 0) {\n      console.log('anca e tot smek');\n      this.refchat.current.scrollIntoView({ behaviour: 'smooth' });\n    }\n  }\n\n  renderMesaje() {\n    return (\n      <ul style={{ display: 'flex', 'flex-direction': 'column' }}>\n        {this.state.mesaje.map((mesaj, i) => (\n          <div ref={i === this.state.mesaje.length - 1 ? this.refchat : undefined}>\n            <MessageBubble message={mesaj.message} sender={mesaj.sender} timestamp={mesaj.timestamp} />\n          </div>\n        ))}\n      </ul>\n    ); // pt fiecare mesaj si poz lui din vector face functia respectiva\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderMesaje()}\n        <InputCss\n          type=\"text\"\n          id=\"id_input\"\n          value={this.state.input_text}\n          onChange={(val) => {\n            this.setState({ input_text: val.target.value });\n          }}\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') {\n              this.addNewMessage(this.state.input_text, 'user');\n              this.setState({ input_text: '' });\n            }\n          }}\n        />\n\n        <ButtonCss\n          onClick={() => {\n            this.addNewMessage(this.state.input_text, 'user');\n            this.setState({ input_text: '' });\n          }}\n          // variant={this.state.button_change}\n          variant=\"primary\"\n        >\n          Trimite!\n\n        </ButtonCss>\n\n\n      </div>\n\n    );\n  }\n}\n\n\nexport default Chat;\n","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nclass About extends React.Component { // eslint-disable-line\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      card_title: 'title ',\r\n      card_text: 'text ',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {this.state.card_title}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              {this.state.card_text}\r\n\r\n            </Card.Text>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({ card_title: 'am schimbat' });\r\n                this.setState({ card_text: 'am schimbat' });\r\n              }}\r\n              variant=\"primary\"\r\n            >\r\n\r\n              Go somewhere\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nimport Chat from './Chat';\r\nimport About from './About';\r\n\r\nconst pdf = require('./res/cv.pdf');\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // button_change: 'primary'\r\n      current_page: 'chat',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let page = null;\r\n    if (this.state.current_page === 'chat') {\r\n      page = (<Chat />);\r\n    } else {\r\n      page = (<About />);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Nav variant=\"tabs\">\r\n          <Nav.Item\r\n            style={{ margin: 'auto' }}\r\n            onClick={() => {\r\n              this.setState({ current_page: 'chat' });\r\n            }}\r\n          >\r\n            <Nav.Link style={{\r\n              bold: 'true', 'font-size': 34, padding: '50px', color: 'palevioletred',\r\n            }}\r\n            >\r\n              Chat\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item\r\n            style={{ margin: 'auto' }}\r\n            onClick={() => window.open(pdf, '_blank')}\r\n          >\r\n            <Nav.Link style={{\r\n              bold: 'true', 'font-size': 34, padding: '50px', color: 'palevioletred',\r\n            }}\r\n            >\r\n              CV\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}